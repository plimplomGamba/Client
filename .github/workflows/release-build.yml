name: Release Build

on:
  push:
    branches: [ 'release/*', 'releases/*' ]
  release:
    types: [created]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: iss

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23' # Adjust version as needed

      # Try using the Maven wrapper directly
      - name: Build with Maven wrapper
        shell: cmd
        run: |
          cd %GITHUB_WORKSPACE%
          echo Current directory: %CD%
          echo Running Maven build with wrapper...
          
          .\mvnw.cmd clean install -e
          
          if %ERRORLEVEL% neq 0 (
            echo Maven build failed with exit code %ERRORLEVEL%
            exit /b %ERRORLEVEL%
          ) else (
            echo Maven build completed successfully
          )

      # Verify build output exists
      - name: Verify build output
        shell: powershell
        run: |
          $targetDir = "${{ github.workspace }}\target"
          if (Test-Path $targetDir) {
            echo "target directory exists"
            Get-ChildItem -Path $targetDir
          } else {
            echo "target directory NOT FOUND!"
          }

      # Only proceed if the target directory exists
      - name: Extract project details from pom.xml
        shell: powershell
        if: success() && hashFiles('**/target/**') != ''
        run: |
          [xml]$pomXml = Get-Content -Path "${{ github.workspace }}\pom.xml"
          $version = $pomXml.project.version
          $artifactId = $pomXml.project.artifactId
          $buildDir = "target"
          $finalName = if ($pomXml.project.build.finalName) { $pomXml.project.build.finalName } else { "$artifactId-$version" }
          
          echo "MAVEN_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "MAVEN_FINAL_NAME=$finalName" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "MAVEN_BUILD_DIR=$buildDir" | Out-File -FilePath $env:GITHUB_ENV -Append
          
          echo "Version: $version"
          echo "Artifact ID: $artifactId"
          echo "Final Name: $finalName"
          echo "Build Dir: $buildDir"

      # Build installer using environment variables (only if Maven build succeeded)
      - name: Build Installer
        shell: powershell
        if: success() && env.MAVEN_VERSION != ''
        run: |
          echo "Using: MAVEN_VERSION=${{ env.MAVEN_VERSION }}"
          echo "Using: MAVEN_FINAL_NAME=${{ env.MAVEN_FINAL_NAME }}"
          echo "Using: MAVEN_BUILD_DIR=${{ env.MAVEN_BUILD_DIR }}"
          
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" `
          "${{ github.workspace }}\clientsetup.iss" `
          "/DJarFile=${{ env.MAVEN_FINAL_NAME }}-jar-with-dependencies.jar" `
          "/DSourcePath=${{ github.workspace }}\${{ env.MAVEN_BUILD_DIR }}" `
          "/DAppVersion=${{ env.MAVEN_VERSION }}"