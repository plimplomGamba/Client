name: Release Build

on:
  push:
    branches: [ 'release/*', 'releases/*' ]
  release:
    types: [created]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: iss

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: 'maven'

      # Build with Maven wrapper
      - name: Build with Maven wrapper
        shell: cmd
        run: |
          cd %GITHUB_WORKSPACE%
          .\mvnw.cmd clean install

      # Extract project details from pom.xml
      - name: Extract project details from pom.xml
        shell: powershell
        run: |
          [xml]$pomXml = Get-Content -Path "${{ github.workspace }}\pom.xml"
          $version = $pomXml.project.version
          $artifactId = $pomXml.project.artifactId
          $buildDir = "target"
          $finalName = if ($pomXml.project.build.finalName) { $pomXml.project.build.finalName } else { "$artifactId-$version" }
          
          echo "MAVEN_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "MAVEN_FINAL_NAME=$finalName" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "MAVEN_BUILD_DIR=$buildDir" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Build installer using environment variables
      - name: Build Installer
        shell: powershell
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" `
          "${{ github.workspace }}\clientsetup.iss" `
          "/DJarFile=${{ env.MAVEN_FINAL_NAME }}-jar-with-dependencies.jar" `
          "/DSourcePath=${{ github.workspace }}\${{ env.MAVEN_BUILD_DIR }}" `
          "/DAppVersion=${{ env.MAVEN_VERSION }}"

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/release/')
        with:
          tag_name: v${{ env.MAVEN_VERSION }}
          name: Release v${{ env.MAVEN_VERSION }}
          draft: false
          prerelease: false
          files: |
            ${{ github.workspace }}\${{ env.MAVEN_BUILD_DIR }}\${{ env.MAVEN_FINAL_NAME }}-jar-with-dependencies.jar
            ${{ github.workspace }}\${{ env.MAVEN_BUILD_DIR }}\Output\*.exe
          token: ${{ secrets.GITHUB_TOKEN }}